package controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class Test1Servlet
 */
@WebServlet("/test1.do")
public class Test1Servlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Test1Servlet() {
        super();
        // TODO Auto-generated constructor stub
    }
    
    
    /* HTTP(HyperText Transfer Protocol) : 
     * 	- 서버와 클라이언트 간의 통신 규칙을 정하기 위한 통신 규약
     * 	- Request(요청), Response(응답) 간의 데이터 전달의 형식을 구조화하기 위해 사용하는 통신 규약
     * 	- Client --- Request ---> Server
     * 	- Server -- Response ---> Client
     * 
     *  - GET / POST
     *  - GET은 사용자가 조회하고자하는 정보를 URL 주소에 담아 전달하는 통신 타입으로, 기본적인 URL 주소 뒤에 ?username=홍길동&age=10 등의 형식을 가진 쿼리 스트링으로써 데이터를 전달한다
     *  - 조회용도로 많이 쓰이며 링크를 공유하고자 할 때 해당 링크의 정보를 통합적으로 전달할 때 많이 사용한다 (SELECT / www.naver.com?search=집에+가고+싶다)
     *  
     *  - POST는 사용자가 특정 정보를 추가, 수정하고자 할 때 전달하는 데이터를 URL 주소창이 아닌 Request Body 라는 특정 영역에 담아 전달할 때 사용한다
     *  - URL 주소창이 아닌 별도의 영역에 데이터를 저장하기 때문에 데이터 크기의 제한을 GET 방식에 비해  넓다
     *  - 또한 사용자가 요청하는 정보가 주소창에 노출되는 것을 막고자 할 때 많이 사용한다 
     */

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		// 1. 전송받은 값이 영어가 아닐 경우 UTF-8 방식으로 인토딩해야 한다
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		
	}
	// GET 방식으로 데이터를 전달 받았을 경우
	
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
	// GET 방식으로 데이터를 전달 받았을 경우

}
